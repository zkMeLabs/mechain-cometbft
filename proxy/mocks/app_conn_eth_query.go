// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	types "github.com/cometbft/cometbft/abci/types"
)

// AppConnEthQuery is an autogenerated mock type for the AppConnEthQuery type
type AppConnEthQuery struct {
	mock.Mock
}

// Error provides a mock function with given fields:
func (_m *AppConnEthQuery) Error() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// EthQuerySync provides a mock function with given fields: query
func (_m *AppConnEthQuery) EthQuerySync(query types.RequestEthQuery) (*types.ResponseEthQuery, error) {
	ret := _m.Called(query)

	var r0 *types.ResponseEthQuery
	if rf, ok := ret.Get(0).(func(types.RequestEthQuery) *types.ResponseEthQuery); ok {
		r0 = rf(query)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*types.ResponseEthQuery)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(types.RequestEthQuery) error); ok {
		r1 = rf(query)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewAppConnEthQuery interface {
	mock.TestingT
	Cleanup(func())
}

// NewAppConnEthQuery creates a new instance of AppConnEthQuery. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAppConnEthQuery(t mockConstructorTestingTNewAppConnEthQuery) *AppConnEthQuery {
	mock := &AppConnEthQuery{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
